<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:ctx="http://www.springframework.org/schema/context" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/webflow-config
    http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd ">

	<ctx:annotation-config></ctx:annotation-config>
	
	<!--  Addded by Ajay: specifying the package name to load the classes into classpath.
	                      Spring will auto-register those classes as spring beans.
	
	        Official Defination:
	             Scans the classpath for annotated components that will be auto-registered as Spring beans. -->
	             
	<ctx:component-scan base-package="com.example"></ctx:component-scan>
	
	<!--  Added by Ajay :  It will load the flow-defination.xml into classpath -->
	<import resource="flow-defination.xml"/>
	
	<!--  Added by Ajay : This is added to read the files from the folders created inside a webapp like css, images, js etc.
	
	      Official Defination:
			Configures a handler for serving static resources such as images, js, and, css files with cache headers optimized 
 			for efficient loading in a web browser. 
 			Allows resources to be served out of any path that is reachable via Spring's Resource handling.
	
	 -->
	 
	<mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/images/" mapping="/images/**"/>

</beans>